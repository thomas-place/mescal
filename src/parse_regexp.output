Terminals unused in grammar

    PARAM


State 13 conflicts: 5 shift/reduce
State 19 conflicts: 5 shift/reduce
State 24 conflicts: 5 shift/reduce
State 25 conflicts: 5 shift/reduce


Grammar

    0 $accept: s $end

    1 s: error
    2  | e

    3 e: e PLUS_TOK e
    4  | e e
    5  | e STAR_TOK
    6  | e PLUSPLUS_TOK
    7  | COMPL_TOK e
    8  | e INTER_TOK e
    9  | OPEN_TOK e CLOSE_TOK
   10  | LETTER
   11  | LETTER BRK_OPEN INDEX BRK_CLOSE
   12  | LETTER BRK_OPEN 'i' BRK_CLOSE
   13  | LETTER BRK_OPEN 'i' '-' INDEX BRK_CLOSE
   14  | EPSILON_TOK
   15  | EMPTY_TOK
   16  | VARIABLE
   17  | VARIABLE BRK_OPEN 'i' BRK_CLOSE
   18  | VARIABLE BRK_OPEN 'i' '-' INDEX BRK_CLOSE


Terminals, with rules where they appear

    $end (0) 0
    '-' (45) 13 18
    'i' (105) 12 13 17 18
    error (256) 1
    VARIABLE <name> (258) 16 17 18
    LETTER <carac> (259) 10 11 12 13
    EPSILON_TOK <regexp> (260) 14
    EMPTY_TOK <regexp> (261) 15
    PARAM <carac> (262)
    INDEX <small_int> (263) 11 13 18
    OPEN_TOK (264) 9
    CLOSE_TOK (265) 9
    BRK_OPEN (266) 11 12 13 17 18
    BRK_CLOSE (267) 11 12 13 17 18
    PLUS_TOK (268) 3
    INTER_TOK (269) 8
    CONCAT_TOK (270)
    STAR_TOK (271) 5
    PLUSPLUS_TOK (272) 6
    COMPL_TOK (273) 7


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    s (22)
        on left: 1 2
        on right: 0
    e <regexp> (23)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 2 3 4 5 6 7 8 9


State 0

    0 $accept: • s $end

    error        shift, and go to state 1
    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6
    COMPL_TOK    shift, and go to state 7

    s  go to state 8
    e  go to state 9


State 1

    1 s: error •

    $default  reduce using rule 1 (s)


State 2

   16 e: VARIABLE •
   17  | VARIABLE • BRK_OPEN 'i' BRK_CLOSE
   18  | VARIABLE • BRK_OPEN 'i' '-' INDEX BRK_CLOSE

    BRK_OPEN  shift, and go to state 10

    $default  reduce using rule 16 (e)


State 3

   10 e: LETTER •
   11  | LETTER • BRK_OPEN INDEX BRK_CLOSE
   12  | LETTER • BRK_OPEN 'i' BRK_CLOSE
   13  | LETTER • BRK_OPEN 'i' '-' INDEX BRK_CLOSE

    BRK_OPEN  shift, and go to state 11

    $default  reduce using rule 10 (e)


State 4

   14 e: EPSILON_TOK •

    $default  reduce using rule 14 (e)


State 5

   15 e: EMPTY_TOK •

    $default  reduce using rule 15 (e)


State 6

    9 e: OPEN_TOK • e CLOSE_TOK

    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6
    COMPL_TOK    shift, and go to state 7

    e  go to state 12


State 7

    7 e: COMPL_TOK • e

    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6
    COMPL_TOK    shift, and go to state 7

    e  go to state 13


State 8

    0 $accept: s • $end

    $end  shift, and go to state 14


State 9

    2 s: e •
    3 e: e • PLUS_TOK e
    4  | e • e
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    8  | e • INTER_TOK e

    VARIABLE      shift, and go to state 2
    LETTER        shift, and go to state 3
    EPSILON_TOK   shift, and go to state 4
    EMPTY_TOK     shift, and go to state 5
    OPEN_TOK      shift, and go to state 6
    PLUS_TOK      shift, and go to state 15
    INTER_TOK     shift, and go to state 16
    STAR_TOK      shift, and go to state 17
    PLUSPLUS_TOK  shift, and go to state 18
    COMPL_TOK     shift, and go to state 7

    $default  reduce using rule 2 (s)

    e  go to state 19


State 10

   17 e: VARIABLE BRK_OPEN • 'i' BRK_CLOSE
   18  | VARIABLE BRK_OPEN • 'i' '-' INDEX BRK_CLOSE

    'i'  shift, and go to state 20


State 11

   11 e: LETTER BRK_OPEN • INDEX BRK_CLOSE
   12  | LETTER BRK_OPEN • 'i' BRK_CLOSE
   13  | LETTER BRK_OPEN • 'i' '-' INDEX BRK_CLOSE

    INDEX  shift, and go to state 21
    'i'    shift, and go to state 22


State 12

    3 e: e • PLUS_TOK e
    4  | e • e
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    8  | e • INTER_TOK e
    9  | OPEN_TOK e • CLOSE_TOK

    VARIABLE      shift, and go to state 2
    LETTER        shift, and go to state 3
    EPSILON_TOK   shift, and go to state 4
    EMPTY_TOK     shift, and go to state 5
    OPEN_TOK      shift, and go to state 6
    CLOSE_TOK     shift, and go to state 23
    PLUS_TOK      shift, and go to state 15
    INTER_TOK     shift, and go to state 16
    STAR_TOK      shift, and go to state 17
    PLUSPLUS_TOK  shift, and go to state 18
    COMPL_TOK     shift, and go to state 7

    e  go to state 19


State 13

    3 e: e • PLUS_TOK e
    4  | e • e
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    7  | COMPL_TOK e •
    8  | e • INTER_TOK e

    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6

    COMPL_TOK  error (nonassociative)

    VARIABLE     [reduce using rule 7 (e)]
    LETTER       [reduce using rule 7 (e)]
    EPSILON_TOK  [reduce using rule 7 (e)]
    EMPTY_TOK    [reduce using rule 7 (e)]
    OPEN_TOK     [reduce using rule 7 (e)]
    $default     reduce using rule 7 (e)

    e  go to state 19


State 14

    0 $accept: s $end •

    $default  accept


State 15

    3 e: e PLUS_TOK • e

    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6
    COMPL_TOK    shift, and go to state 7

    e  go to state 24


State 16

    8 e: e INTER_TOK • e

    VARIABLE     shift, and go to state 2
    LETTER       shift, and go to state 3
    EPSILON_TOK  shift, and go to state 4
    EMPTY_TOK    shift, and go to state 5
    OPEN_TOK     shift, and go to state 6
    COMPL_TOK    shift, and go to state 7

    e  go to state 25


State 17

    5 e: e STAR_TOK •

    $default  reduce using rule 5 (e)


State 18

    6 e: e PLUSPLUS_TOK •

    $default  reduce using rule 6 (e)


State 19

    3 e: e • PLUS_TOK e
    4  | e • e
    4  | e e •
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    8  | e • INTER_TOK e

    VARIABLE      shift, and go to state 2
    LETTER        shift, and go to state 3
    EPSILON_TOK   shift, and go to state 4
    EMPTY_TOK     shift, and go to state 5
    OPEN_TOK      shift, and go to state 6
    STAR_TOK      shift, and go to state 17
    PLUSPLUS_TOK  shift, and go to state 18
    COMPL_TOK     shift, and go to state 7

    VARIABLE     [reduce using rule 4 (e)]
    LETTER       [reduce using rule 4 (e)]
    EPSILON_TOK  [reduce using rule 4 (e)]
    EMPTY_TOK    [reduce using rule 4 (e)]
    OPEN_TOK     [reduce using rule 4 (e)]
    $default     reduce using rule 4 (e)

    e  go to state 19


State 20

   17 e: VARIABLE BRK_OPEN 'i' • BRK_CLOSE
   18  | VARIABLE BRK_OPEN 'i' • '-' INDEX BRK_CLOSE

    BRK_CLOSE  shift, and go to state 26
    '-'        shift, and go to state 27


State 21

   11 e: LETTER BRK_OPEN INDEX • BRK_CLOSE

    BRK_CLOSE  shift, and go to state 28


State 22

   12 e: LETTER BRK_OPEN 'i' • BRK_CLOSE
   13  | LETTER BRK_OPEN 'i' • '-' INDEX BRK_CLOSE

    BRK_CLOSE  shift, and go to state 29
    '-'        shift, and go to state 30


State 23

    9 e: OPEN_TOK e CLOSE_TOK •

    $default  reduce using rule 9 (e)


State 24

    3 e: e • PLUS_TOK e
    3  | e PLUS_TOK e •
    4  | e • e
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    8  | e • INTER_TOK e

    VARIABLE      shift, and go to state 2
    LETTER        shift, and go to state 3
    EPSILON_TOK   shift, and go to state 4
    EMPTY_TOK     shift, and go to state 5
    OPEN_TOK      shift, and go to state 6
    INTER_TOK     shift, and go to state 16
    STAR_TOK      shift, and go to state 17
    PLUSPLUS_TOK  shift, and go to state 18
    COMPL_TOK     shift, and go to state 7

    VARIABLE     [reduce using rule 3 (e)]
    LETTER       [reduce using rule 3 (e)]
    EPSILON_TOK  [reduce using rule 3 (e)]
    EMPTY_TOK    [reduce using rule 3 (e)]
    OPEN_TOK     [reduce using rule 3 (e)]
    $default     reduce using rule 3 (e)

    e  go to state 19


State 25

    3 e: e • PLUS_TOK e
    4  | e • e
    5  | e • STAR_TOK
    6  | e • PLUSPLUS_TOK
    8  | e • INTER_TOK e
    8  | e INTER_TOK e •

    VARIABLE      shift, and go to state 2
    LETTER        shift, and go to state 3
    EPSILON_TOK   shift, and go to state 4
    EMPTY_TOK     shift, and go to state 5
    OPEN_TOK      shift, and go to state 6
    STAR_TOK      shift, and go to state 17
    PLUSPLUS_TOK  shift, and go to state 18
    COMPL_TOK     shift, and go to state 7

    VARIABLE     [reduce using rule 8 (e)]
    LETTER       [reduce using rule 8 (e)]
    EPSILON_TOK  [reduce using rule 8 (e)]
    EMPTY_TOK    [reduce using rule 8 (e)]
    OPEN_TOK     [reduce using rule 8 (e)]
    $default     reduce using rule 8 (e)

    e  go to state 19


State 26

   17 e: VARIABLE BRK_OPEN 'i' BRK_CLOSE •

    $default  reduce using rule 17 (e)


State 27

   18 e: VARIABLE BRK_OPEN 'i' '-' • INDEX BRK_CLOSE

    INDEX  shift, and go to state 31


State 28

   11 e: LETTER BRK_OPEN INDEX BRK_CLOSE •

    $default  reduce using rule 11 (e)


State 29

   12 e: LETTER BRK_OPEN 'i' BRK_CLOSE •

    $default  reduce using rule 12 (e)


State 30

   13 e: LETTER BRK_OPEN 'i' '-' • INDEX BRK_CLOSE

    INDEX  shift, and go to state 32


State 31

   18 e: VARIABLE BRK_OPEN 'i' '-' INDEX • BRK_CLOSE

    BRK_CLOSE  shift, and go to state 33


State 32

   13 e: LETTER BRK_OPEN 'i' '-' INDEX • BRK_CLOSE

    BRK_CLOSE  shift, and go to state 34


State 33

   18 e: VARIABLE BRK_OPEN 'i' '-' INDEX BRK_CLOSE •

    $default  reduce using rule 18 (e)


State 34

   13 e: LETTER BRK_OPEN 'i' '-' INDEX BRK_CLOSE •

    $default  reduce using rule 13 (e)
